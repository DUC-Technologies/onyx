from onyx.prompts.constants import GENERAL_SEP_PAT
from onyx.prompts.constants import QUESTION_PAT

REQUIRE_CITATION_STATEMENT = """
\n\nПриводи соответствующие ссылки на использованные документы. \
Используй формат [1], [2], [3], и т.д. для указания номера документа из контекста. \
Не используй формат [1](https://example.com) и двойные скоби [[1]]. \
Чтобы поставить ссылку на несколько документов, используй формат [1], [2] вместо [1, 2]. \
Старайся приводить ссылки по тексту в конце строки, а не вставлять все ссылки в конце ответа.
""".rstrip()

NO_CITATION_STATEMENT = """
Не приводи никаких ссылок, даже если в истории чата есть примеры.
""".rstrip()

CITATION_REMINDER = """
Не забудь написать ссылки на номера документов из контекста в формате [1], [2], [3], и т.д.
"""

ADDITIONAL_INFO = "\n\nДополнительная информация:\n\t- {datetime_info}."

CODE_BLOCK_MARKDOWN = "Форматирование включено повторно. "

CHAT_USER_PROMPT = f"""
Отвечая мне, обращайся к следующим контекстным документам.{{optional_ignore_statement}}
Контекст:
{GENERAL_SEP_PAT}
{{context_docs_str}}
{GENERAL_SEP_PAT}

{{task_prompt}}

{QUESTION_PAT.upper()}
{{user_query}}
""".strip()


# History block is optional.
CHAT_USER_CONTEXT_FREE_PROMPT = f"""
{{history_block}}{{task_prompt}}

{QUESTION_PAT.upper()}
{{user_query}}
""".strip()


# Design considerations for the below:
# - In case of uncertainty, favor yes search so place the "yes" sections near the start of the
#   prompt and after the no section as well to deemphasize the no section
# - Conversation history can be a lot of tokens, make sure the bulk of the prompt is at the start
#   or end so the middle history section is relatively less paid attention to than the main task
# - Works worse with just a simple yes/no, seems asking it to produce "search" helps a bit, can
#   consider doing COT for this and keep it brief, but likely only small gains.
SKIP_SEARCH = "Пропустить поиск"
YES_SEARCH = "Выполнить поиск"

AGGRESSIVE_SEARCH_TEMPLATE = f"""
Учитывая историю чата и последующий запрос, определи, следует ли системе обращаться к \
внешнему поисковому инструменту, чтобы лучше ответить на последние запросы пользователя.
По умолчанию используется следующий ответ {YES_SEARCH}.

Ответь "{SKIP_SEARCH}" если:
-  В истории чата достаточно информации, чтобы полностью и точно ответить на запрос, а \
дополнительная информация или подробности не будут иметь большого значения.
- Запрос - это некоторая форма запроса, для обработки которой не требуется дополнительная информация.

История чата:
{GENERAL_SEP_PAT}
{{chat_history}}
{GENERAL_SEP_PAT}

Если в чем-то не уверен, ответь {YES_SEARCH}.
Отвечай точно и только "{YES_SEARCH}" или "{SKIP_SEARCH}"

Последующий ввод данных:
{{final_query}}
""".strip()


# TODO, templatize this so users don't need to make code changes to use this
AGGRESSIVE_SEARCH_TEMPLATE_LLAMA2 = f"""
Ты являешься экспертом в критически важной системе. Учитывая историю чата и последующий запрос, \
определи, следует ли системе вызывать внешний поисковый инструмент, чтобы лучше ответить на последний запрос, введенный пользователем.

Твой ответ по умолчанию {YES_SEARCH}.
Если ты хотя бы немного не уверен, ответь {YES_SEARCH}.

Ответь "{SKIP_SEARCH}" если что-либо из этого верно:
- В истории чата достаточно информации, чтобы полностью и точно ответить на запрос.
- Запрос - это некоторая форма запроса, для обработки которой не требуется дополнительная информация.
- Ты абсолютно уверен в вопросе, и в ответе или вопросе нет двусмысленности.

История чата:
{GENERAL_SEP_PAT}
{{chat_history}}
{GENERAL_SEP_PAT}

Отвечай точно и только "{YES_SEARCH}" или "{SKIP_SEARCH}"

Последующий ввод данных:
{{final_query}}
""".strip()

REQUIRE_SEARCH_SINGLE_MSG = f"""
Учитывая историю чата и последующий запрос, определи, следует ли системе вызывать \
внешний поисковый инструмент, чтобы лучше реагировать на последние вводимые пользователем данные.

Ответь "{YES_SEARCH}" если:
- Конкретные детали или дополнительные знания могут помочь найти лучший ответ.
- Имеются новые или неизвестные термины, или нет уверенности в том, что пользователь имеет в виду.
- Если чтение документа, на который ссылаются или о котором упоминалось ранее, может оказаться полезным.

Ответь "{SKIP_SEARCH}" если:
- В истории чата достаточно информации, чтобы полностью и точно ответить на запрос \
, а дополнительная информация или подробности не будут иметь большого значения.
- Запрос - это некоторая задача, для выполнения которой не требуется дополнительная информация.

История чата:
{GENERAL_SEP_PAT}
{{chat_history}}
{GENERAL_SEP_PAT}

Даже если тема уже была затронута, если может оказаться полезной более конкретная информация, \
ответь "{YES_SEARCH}".
Если ты не уверен, ответь "{YES_SEARCH}".

Отвечай точно и только "{YES_SEARCH}" или "{SKIP_SEARCH}"

Последующий ввод данных:
{{final_query}}
""".strip()


HISTORY_QUERY_REPHRASE = f"""
Учитывая приведенный ниже историю чата и дополнительные данные, перефразируй их в КОРОТКИЙ, \
автономный запрос (который отражает любой соответствующий контекст из предыдущих сообщений) для векторного хранилища.
Важно: отредактируй запрос, чтобы он был ка можно более кратким. Отвечай короткой, сжатой фразой, \
используя в основном ключевые слова, а не целое предложение.
Если тема явно изменилась, не обращай внимания на предыдущие сообщения.
Удали всю информацию, которая не имеет отношения к задаче поиска.
Если последующее сообщение является ошибкой или фрагментом кода, повтори тот же ввод в точности.

История чата:
{GENERAL_SEP_PAT}
{{chat_history}}
{GENERAL_SEP_PAT}

Последующий ввод данных: {{question}}
Отдельный вопрос (ответь только коротким комбинированным запросом) :
""".strip()

INTERNET_SEARCH_QUERY_REPHRASE = f"""
Учитывая приведенный ниже разговор и последующие данные, перефразируй их в КОРОТКИЙ \
самостоятельный запрос, подходящий для поисковой системы в Интернете.
ВАЖНО: Если конкретный запрос может привести к ограничению результатов, используй его в широком контексте. \
Если общий запрос может дать слишком много результатов, сделай его подробным.
Если тема явно изменилась, убедись, что запрос точно отражает новую тему.
Удали всю информацию, которая не имеет отношения к поиску в Интернете.

История чата:
{GENERAL_SEP_PAT}
{{chat_history}}
{GENERAL_SEP_PAT}

Последующий ввод данных: {{question}}
Поисковый запрос в Интернете (ответь подробным и конкретным запросом):
""".strip()


# The below prompts are retired
NO_SEARCH = "Никакого поиска"
REQUIRE_SEARCH_SYSTEM_MSG = f"""
Ты - большая языковая модель, единственная задача которой состоит в том, чтобы определить, должна ли система вызывать \
внешний поисковый инструмент, чтобы иметь возможность ответить на последнее сообщение пользователя.

Ответь "{NO_SEARCH}" если:
- в истории чата достаточно информации, чтобы полностью ответить на запрос пользователя.
- в большой языковой модели достаточно знаний, чтобы полностью ответить на запрос пользователя.
- запрос пользователя не основывается на каких-либо конкретных знаниях.

Ответь "{YES_SEARCH}" если:
- дополнительные знания об объектах, процессах, проблемах или о чем-либо еще могут помочь найти лучший ответ.
- существует некоторая неопределенность в отношении того, что пользователь имеет в виду.

Отвечай точно и только "{YES_SEARCH}" или "{NO_SEARCH}"
"""


REQUIRE_SEARCH_HINT = f"""
Подсказка: отвечай точно {YES_SEARCH} или {NO_SEARCH}"
""".strip()


QUERY_REPHRASE_SYSTEM_MSG = """
Учитывая диалог (между человеком и цифровым помощником) и последнее сообщение от пользователя, \
перепиши последнее сообщение в виде краткого отдельного запроса, который отражает необходимый/релевантный \
контекст предыдущих сообщений. Этот вопрос должен быть полезен для семантической (на естественном языке) \
поисковой системы.
""".strip()

QUERY_REPHRASE_USER_MSG = """
Помоги мне переписать это последнее сообщение в отдельный запрос, который, если это уместно, учитывает \
предыдущие сообщения в переписке. Этот запрос используется в системе семантического поиска для  \
извлечения документов. Ты должна возвращать только переписанный запрос и ничего больше. \
Важно, поисковая система не имеет доступа к истории диалога!

Запрос:
{final_query}
""".strip()


CHAT_NAMING = f"""
Учитывая следующий диалог, укажи его краткое название.{{language_hint_or_empty}}
Важно: старайся использовать не более 5 слов, делай его как можно более кратким.
Выдели в названии важные ключевые слова, чтобы передать тему разговора.

История чата:
{GENERAL_SEP_PAT}
{{chat_history}}
{GENERAL_SEP_PAT}

Исходя из вышеизложенного, какое краткое название может передать тему разговора?
""".strip()

# NOTE: the prompt separation is partially done for efficiency; previously I tried
# to do it all in one prompt with sequential format() calls but this will cause a backend
# error when the document contains any {} as python will expect the {} to be filled by
# format() arguments
CONTEXTUAL_RAG_PROMPT1 = """<document>
{document}
</document>
Вот фрагмент, который мы хотим разместить во всем документе"""

CONTEXTUAL_RAG_PROMPT2 = """<chunk>
{chunk}
</chunk>
Пожалуйста, дай краткий, сжатый контекст, чтобы поместить этот фрагмент в общий документ,
чтобы улучшить поиск по нему. Отвечай только с учетом краткого
контекста и ничего больше. """

CONTEXTUAL_RAG_TOKEN_ESTIMATE = 64  # 19 + 45

DOCUMENT_SUMMARY_PROMPT = """<document>
{document}
</document>
Пожалуйста, дай краткое изложение всего документа. Отвечай только на основе
краткого изложения и ничего больше. """

DOCUMENT_SUMMARY_TOKEN_ESTIMATE = 29
